name: deta PP下载alist上传
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      Folder:
        description: '保存目录'
        required: true
        default: '202312'

jobs:
  Aria2-Aliyun:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 
      - name: gengxing
        run: |
           sudo apt-get update          
      - name: 检查空间使用情况
        run: |
          echo "Free space:"
          df -h

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
           tool-cache: true
           android: true
           dotnet: true
           haskell: true
           large-packages: true
           docker-images: false
           swap-storage: true

      - name: 第1次安装Aria2
        run: sudo apt install -y aria2     
      - name: 第1次安装Python3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: 第1次安装所需要的Python信赖
        run: |
          python -m pip install --upgrade pip wheel    
          pip install install requests    

      - name: 第1次下载文件
        id: downloading1
        run: |
          mkdir downloads
          python task.py --projet="${{ secrets.DETA_PROJECT_ID }}" --apikey="${{ secrets.DETA_API_KEY }}" --act="download"
          filename=$(ls downloads | head -n1)    
          echo "::set-output name=path::downloads/$filename"    
          echo "::set-output name=filename::$filename"    
          echo "::set-output name=taskkey::$taskkey"    
          size=$(ls -l downloads/$filename | awk '{print $5}' )    
          echo "::set-output name=size::$size"    

      - name: 下载加密程序1
        run: |
          curl -L -o dist.tar.gz https://github.com/githubdesktopaa/alist-encrypt/releases/download/0.0.2/dist.tar.gz
          tar -xzf dist.tar.gz
          
      - name: 加密文件
        id: encrypt1
        if: steps.downloading1.outputs.filename != '' && !cancelled() && !failure()
        run: |
           ${{ github.workspace }}/build/alist-encrypt-linux '${{ secrets.ALIST_ENCRYPT_PASSWORD }}' aesctr enc '${{ github.workspace }}/downloads/' '${{ github.workspace }}/out/' encName
           filename=$(ls out | head -n1)
           extension=$(awk 'BEGIN{srand();}{a[NR]=$0}END{print a[int(rand()*NR)+1]}' suffixes | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
           filename_no_suffix="${filename%.*}"
           newfilename="$filename_no_suffix"."$extension"
           if [ "$filename" != "$newfilename" ]; then
            	mv out/$filename out/$newfilename
           fi
           sha1_s=`openssl sha1 out/$newfilename | awk '{ print $2 }'`
           header="OC-Checksum:sha1:$sha1_s"
           echo "::set-output name=header::$header"
           echo "::set-output name=filename::$newfilename"
           echo "::set-output name=path::out/$newfilename"
           size=$(ls -l out/$filename | awk '{print $5}' )
           echo "::set-output name=size::$size"          
          
      
      - name: 第1次上传OneDrive
        uses: wei/rclone@v1
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        with:
          args: copy out/  ${{ secrets.TO_UPLOAD_TO_THE_NETDISK_ONEDRIVE }}:${{ secrets.YEARS }}/${{ secrets.VIDEO_PP_SAVE_DIRECTORY }}  ${{ secrets.RCLONE_UPLOAD_CONFIGURATION_PARAMETERS }}  
      
      - name: 第1次保存数据，删除远程已经下载列表
        id:  database1
        run: |
          python task.py --projet="${{ secrets.DETA_PROJECT_ID }}" --apikey="${{ secrets.DETA_API_KEY }}" --taskkey="${{ steps.downloading1.outputs.taskkey }}" --act="del"
          echo "::set-output name=status::ok"
      - name: 第1次删除已下载文件
        run: |
         sudo rm -rf downloads
         sudo rm -rf out